#Server configurations:
server.port=8082
spring.data.mongodb.uri=${MOGODB_URI}

server.error.include-message=always
server.error.include-binding-errors=always

#Cloudcarafka
spring.kafka.bootstrap-servers=glider.srvs.cloudkafka.com:9094
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config=${KAFKA_CONFIG}


#Spring Cloud Stream
spring.cloud.function.definition=receiveProfile;sendUpdatedProfile;receiveUpdatedProfile;receiveProblem;sendCommentIdToProblem;receiveNewName;receiveCommentIdToDelete;receiveAuthorToRemove;

#IN (Group2)
#Profile from Accounting ->
spring.cloud.stream.bindings.receiveProfile-in-0.destination=dqtiwmxa-authenticated
spring.cloud.stream.bindings.receiveProfile-in-0.group=dqtiwmxa-authenticatedGroup2
#To update profile from itself or Problem/Solution ->
spring.cloud.stream.bindings.receiveUpdatedProfile-in-0.destination=dqtiwmxa-updateProfile
spring.cloud.stream.bindings.receiveUpdatedProfile-in-0.group=dqtiwmxa-updateProfileGroup2
#To update Profile Name everywhere ->
spring.cloud.stream.bindings.receiveNewName-in-0.destination=dqtiwmxa-authorNewName
spring.cloud.stream.bindings.receiveNewName-in-0.group=dqtiwmxa-authorNewNameGroup2

#Problem
spring.cloud.stream.bindings.receiveProblem-in-0.destination=dqtiwmxa-currentProfile
spring.cloud.stream.bindings.receiveProblem-in-0.group=dqtiwmxa-currentProfileGroup2
#To update all comments with ProblemId ->
spring.cloud.stream.bindings.receiveCommentIdToDelete-in-0.destination=dqtiwmxa-removeAllActivities
spring.cloud.stream.bindings.receiveCommentIdToDelete-in-0.group=dqtiwmxa-removeAllActivitiesGroup2
#To remove everything about deleted author->
spring.cloud.stream.bindings.receiveAuthorToRemove-in-0.destination=dqtiwmxa-removeAuthor
spring.cloud.stream.bindings.receiveAuthorToRemove-in-0.group=dqtiwmxa-removeAuthorGroup2

#OUT
#Updated Problem to everyone ->
spring.cloud.stream.bindings.sendUpdatedProfile-out-0.destination=dqtiwmxa-updateProfile
#CommentId to Problem ->
spring.cloud.stream.bindings.sendCommentIdToProblem-out-0.destination=dqtiwmxa-newComment

spring.kafka.consumer.auto-offset-reset=earliest